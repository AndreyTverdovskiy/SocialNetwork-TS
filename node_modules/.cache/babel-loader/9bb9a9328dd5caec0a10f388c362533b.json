{"ast":null,"code":"import { sendMessageActionCreator } from \"../../redux/dialogs-reducer\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { withAuthRedirect } from \"../../hoc/withAuthRedirect\";\nimport Dialogs from \"./Dialogs\";\n\nlet mapStateToProps = reduxStore => {\n  return {\n    dialogPage: reduxStore.dialogsPage // newMassageText: reduxStore.dialogsPage.newMassageText,\n\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    sendMessage: newMassage => {\n      dispatch(sendMessageActionCreator(newMassage));\n    }\n  };\n};\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withAuthRedirect)(Dialogs);","map":{"version":3,"sources":["E:/Incubator/socialnetwork_ts/src/components/Dialogs/DialogsContainer.tsx"],"names":["sendMessageActionCreator","connect","compose","withAuthRedirect","Dialogs","mapStateToProps","reduxStore","dialogPage","dialogsPage","mapDispatchToProps","dispatch","sendMessage","newMassage"],"mappings":"AAAA,SAAyBA,wBAAzB,QAAwD,6BAAxD;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,OAAR,QAAgC,OAAhC;AAEA,SAAQC,gBAAR,QAA+B,4BAA/B;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAMA,IAAIC,eAAe,GAAIC,UAAD,IAAiD;AACnE,SAAO;AACHC,IAAAA,UAAU,EAAED,UAAU,CAACE,WADpB,CAEH;;AAFG,GAAP;AAIH,CALD;;AASA,IAAIC,kBAAkB,GAAIC,QAAD,IAA8C;AACnE,SAAO;AACHC,IAAAA,WAAW,EAAGC,UAAD,IAAwB;AACjCF,MAAAA,QAAQ,CAACV,wBAAwB,CAACY,UAAD,CAAzB,CAAR;AACH;AAHE,GAAP;AAKH,CAND;;AASA,eAAeV,OAAO,CACrBD,OAAO,CACHI,eADG,EACcI,kBADd,CADc,EAGlBN,gBAHkB,CAAP,CAKdC,OALc,CAAf","sourcesContent":["import {dialogsPageType, sendMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {compose, Dispatch} from \"redux\";\r\nimport React from \"react\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport Dialogs from \"./Dialogs\";\r\n\r\ntype MapStatePropsType = {\r\n    dialogPage: dialogsPageType\r\n    // newMassageText: string\r\n}\r\nlet mapStateToProps = (reduxStore: AppStateType): MapStatePropsType => {\r\n    return {\r\n        dialogPage: reduxStore.dialogsPage,\r\n        // newMassageText: reduxStore.dialogsPage.newMassageText,\r\n    }\r\n}\r\ntype mapDispatchPropsType = {\r\n    sendMessage: (newMassage: string) => void\r\n}\r\nlet mapDispatchToProps = (dispatch: Dispatch): mapDispatchPropsType => {\r\n    return {\r\n        sendMessage: (newMassage: string) => {\r\n            dispatch(sendMessageActionCreator(newMassage))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default compose<React.ComponentType>\r\n(connect\r\n    (mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)\r\n(Dialogs)"]},"metadata":{},"sourceType":"module"}