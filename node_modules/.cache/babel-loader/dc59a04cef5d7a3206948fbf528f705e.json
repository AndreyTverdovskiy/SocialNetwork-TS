{"ast":null,"code":"import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport profileReducer from './profile-reducer';\nimport dialogsReducer from './dialogs-reducer';\nimport usersReducer from \"./users-reducer\";\nimport authReducer from \"./auth-reducer\";\nimport thunk from 'redux-thunk';\nimport { reducer as formReducer } from 'redux-form';\nimport appReducer from \"./app-reducer\";\nlet rootReducer = combineReducers({\n  profilePage: profileReducer,\n  dialogsPage: dialogsReducer,\n  usersPage: usersReducer,\n  auth: authReducer,\n  form: formReducer,\n  app: appReducer //sideBar: sidebarReducer\n\n}); // export type StoreType(AppStateType) = typeof reduxStore\n\nexport let reduxStore = createStore(rootReducer, applyMiddleware(thunk));","map":{"version":3,"sources":["E:/Incubator/socialnetwork_ts/src/redux/redux-store.ts"],"names":["applyMiddleware","combineReducers","createStore","profileReducer","dialogsReducer","usersReducer","authReducer","thunk","reducer","formReducer","appReducer","rootReducer","profilePage","dialogsPage","usersPage","auth","form","app","reduxStore"],"mappings":"AAAA,SAAQA,eAAR,EAAyBC,eAAzB,EAA0CC,WAA1C,QAA4D,OAA5D;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,OAAO,IAAIC,WAAnB,QAAqC,YAArC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAEA,IAAIC,WAAW,GAAGV,eAAe,CAAC;AAC9BW,EAAAA,WAAW,EAAET,cADiB;AAE9BU,EAAAA,WAAW,EAAET,cAFiB;AAG9BU,EAAAA,SAAS,EAAET,YAHmB;AAI9BU,EAAAA,IAAI,EAAET,WAJwB;AAK9BU,EAAAA,IAAI,EAAEP,WALwB;AAM9BQ,EAAAA,GAAG,EAAEP,UANyB,CAO9B;;AAP8B,CAAD,CAAjC,C,CAUA;;AAEA,OAAO,IAAIQ,UAAU,GAAGhB,WAAW,CAACS,WAAD,EAAcX,eAAe,CAACO,KAAD,CAA7B,CAA5B","sourcesContent":["import {applyMiddleware, combineReducers, createStore} from 'redux';\r\nimport profileReducer from './profile-reducer';\r\nimport dialogsReducer from './dialogs-reducer';\r\nimport sidebarReducer from './sidebar-reducer';\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunk from 'redux-thunk';\r\nimport {reducer as formReducer} from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n    //sideBar: sidebarReducer\r\n})\r\n\r\n// export type StoreType(AppStateType) = typeof reduxStore\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport let reduxStore = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n"]},"metadata":{},"sourceType":"module"}