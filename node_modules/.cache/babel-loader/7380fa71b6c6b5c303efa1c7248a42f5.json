{"ast":null,"code":"var _jsxFileName = \"E:\\\\Incubator\\\\socialnetwork_ts\\\\src\\\\components\\\\Profile\\\\MyPosts\\\\MyPosts.tsx\";\nimport React from 'react';\nimport s from './MyPosts.module.css';\nimport Post from './Post/Post';\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\nimport { TextArea } from \"../../common/FormsControls/FormsControls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPosts = /*#__PURE__*/React.memo(_c = props => {\n  const maxLength10 = maxLengthCreator(10);\n  const AddPostForm = /*#__PURE__*/React.memo(props => {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: props.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          name: 'newPostBody',\n          component: TextArea,\n          placeholder: 'Post text',\n          validate: [required, maxLength10]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this);\n  });\n  const AddPostFormReduxForm = reduxForm({\n    form: 'postForm'\n  })(AddPostForm);\n\n  const onSubmit = formData => {\n    props.addPost(formData.newPostBody);\n  };\n\n  let postsElements = props.posts.map(p => /*#__PURE__*/_jsxDEV(Post, {\n    message: p.message,\n    counts: p.counts\n  }, p.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 46\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.postsBlock,\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"My Posts\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddPostFormReduxForm, {\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.posts,\n      children: postsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n});\n_c2 = MyPosts;\nexport default MyPosts;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"MyPosts$React.memo\");\n$RefreshReg$(_c2, \"MyPosts\");","map":{"version":3,"sources":["E:/Incubator/socialnetwork_ts/src/components/Profile/MyPosts/MyPosts.tsx"],"names":["React","s","Post","Field","reduxForm","maxLengthCreator","required","TextArea","MyPosts","memo","props","maxLength10","AddPostForm","handleSubmit","AddPostFormReduxForm","form","onSubmit","formData","addPost","newPostBody","postsElements","posts","map","p","message","counts","id","postsBlock"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAEA,SAAQC,KAAR,EAAkCC,SAAlC,QAAkD,YAAlD;AACA,SAAQC,gBAAR,EAA0BC,QAA1B,QAAyC,sCAAzC;AACA,SAAQC,QAAR,QAAuB,0CAAvB;;AAUA,MAAMC,OAAO,gBAAGR,KAAK,CAACS,IAAN,MAAaC,KAAD,IAA4B;AACpD,QAAMC,WAAW,GAAGN,gBAAgB,CAAC,EAAD,CAApC;AAEA,QAAMO,WAAyD,gBAAGZ,KAAK,CAACS,IAAN,CAAYC,KAAD,IAAW;AACpF,wBACI;AAAM,MAAA,QAAQ,EAAEA,KAAK,CAACG,YAAtB;AAAA,8BACI;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAE,aAAb;AACO,UAAA,SAAS,EAAEN,QADlB;AAEO,UAAA,WAAW,EAAE,WAFpB;AAGO,UAAA,QAAQ,EAAE,CAACD,QAAD,EAAWK,WAAX;AAHjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH,GAfiE,CAAlE;AAiBA,QAAMG,oBAAoB,GAAGV,SAAS,CAAkB;AAACW,IAAAA,IAAI,EAAE;AAAP,GAAlB,CAAT,CAA+CH,WAA/C,CAA7B;;AAEA,QAAMI,QAAQ,GAAIC,QAAD,IAA+B;AAC5CP,IAAAA,KAAK,CAACQ,OAAN,CAAcD,QAAQ,CAACE,WAAvB;AACH,GAFD;;AAGA,MAAIC,aAAa,GAAGV,KAAK,CAACW,KAAN,CAAYC,GAAZ,CAAgBC,CAAC,iBAAI,QAAC,IAAD;AACM,IAAA,OAAO,EAAEA,CAAC,CAACC,OADjB;AAEM,IAAA,MAAM,EAAED,CAAC,CAACE;AAFhB,KAAWF,CAAC,CAACG,EAAb;AAAA;AAAA;AAAA;AAAA,UAArB,CAApB;AAKA,sBACI;AAAK,IAAA,SAAS,EAAEzB,CAAC,CAAC0B,UAAlB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,oBAAD;AAAsB,MAAA,QAAQ,EAAEX;AAAhC;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAEf,CAAC,CAACoB,KAAlB;AAAA,gBACKD;AADL;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CAvCe,CAAhB;MAAMZ,O;AAyCN,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\nimport s from './MyPosts.module.css'\r\nimport Post from './Post/Post';\r\nimport {postDataType} from \"../../../redux/profile-reducer\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\r\n\r\ntype MyPostPropsType = {\r\n    posts: Array<postDataType>\r\n    addPost: (message: string) => void\r\n}\r\ntype AddPostFormType = {\r\n    newPostBody: string\r\n}\r\n\r\nconst MyPosts = React.memo( (props: MyPostPropsType) => {\r\n    const maxLength10 = maxLengthCreator(10)\r\n\r\n    const AddPostForm: React.FC<InjectedFormProps<AddPostFormType>> = React.memo((props) => {\r\n        return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field name={'newPostBody'}\r\n                           component={TextArea}\r\n                           placeholder={'Post text'}\r\n                           validate={[required, maxLength10]}/>\r\n                </div>\r\n\r\n                <div>\r\n                    <button>Add post</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    })\r\n\r\n    const AddPostFormReduxForm = reduxForm<AddPostFormType>({form: 'postForm'})(AddPostForm)\r\n\r\n    const onSubmit = (formData: AddPostFormType) => {\r\n        props.addPost(formData.newPostBody)\r\n    }\r\n    let postsElements = props.posts.map(p => <Post key={p.id}\r\n                                                   message={p.message}\r\n                                                   counts={p.counts}/>\r\n    )\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My Posts</h3>\r\n            <AddPostFormReduxForm onSubmit={onSubmit}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default MyPosts;"]},"metadata":{},"sourceType":"module"}