{"ast":null,"code":"var _jsxFileName = \"E:\\\\Incubator\\\\socialnetwork_ts\\\\src\\\\hoc\\\\withAuthRedirect.tsx\";\nimport React from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst mapStateToProps = state => {\n  return {\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport function withAuthRedirect(Component) {\n  const RedirectComponent = props => {\n    let {\n      isAuth,\n      ...restProps\n    } = props;\n    if (!isAuth) return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: '/login'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 29\n    }, this);\n    return /*#__PURE__*/_jsxDEV(Component, { ...restProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 16\n    }, this);\n  };\n\n  let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent);\n  return ConnectedRedirectComponent;\n}","map":{"version":3,"sources":["E:/Incubator/socialnetwork_ts/src/hoc/withAuthRedirect.tsx"],"names":["React","Redirect","connect","mapStateToProps","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","props","restProps","ConnectedRedirectComponent"],"mappings":";AAAA,OAAOA,KAAP,MAAmC,OAAnC;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAMA,MAAMC,eAAe,GAAIC,KAAD,IAA4C;AAChE,SAAO;AACHC,IAAAA,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWD;AADhB,GAAP;AAGH,CAJD;;AAMA,OAAO,SAASE,gBAAT,CAA6BC,SAA7B,EAA0D;AAE7D,QAAMC,iBAAiB,GAAIC,KAAD,IAA8B;AACpD,QAAI;AAACL,MAAAA,MAAD;AAAS,SAAGM;AAAZ,QAAyBD,KAA7B;AACA,QAAI,CAACL,MAAL,EAAa,oBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AAEb,wBAAO,QAAC,SAAD,OAAeM;AAAf;AAAA;AAAA;AAAA;AAAA,YAAP;AACH,GALD;;AAOA,MAAIC,0BAA0B,GAAGV,OAAO,CAACC,eAAD,CAAP,CAAyBM,iBAAzB,CAAjC;AAEA,SAAOG,0BAAP;AAEH","sourcesContent":["import React, {ComponentType} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../redux/redux-store\";\r\n\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n}\r\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport function withAuthRedirect<T>(Component: ComponentType<T>) {\r\n\r\n    const RedirectComponent = (props: MapStatePropsType) => {\r\n        let {isAuth, ...restProps} = props\r\n        if (!isAuth) return <Redirect to={'/login'}/>\r\n\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\n    let ConnectedRedirectComponent = connect(mapStateToProps)(RedirectComponent)\r\n\r\n    return ConnectedRedirectComponent\r\n\r\n}"]},"metadata":{},"sourceType":"module"}