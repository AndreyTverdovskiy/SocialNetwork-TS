{"ast":null,"code":"import { getAuthUserData } from \"./auth-reducer\";\nlet initialState = {\n  initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"SN/APP/INITIALIZED_SUCCESS\":\n      return { ...state,\n        initialized: true\n      };\n\n    default:\n      return state;\n  }\n};\n\n// Action Creators (AC)\nexport const initializedSuccess = () => ({\n  type: 'SN/APP/INITIALIZED_SUCCESS'\n}); //Thunks\n\nexport const initializeApp = () => dispatch => {\n  const promise = dispatch(getAuthUserData());\n  Promise.all([promise]).then(() => {\n    dispatch(initializedSuccess());\n  });\n};\nexport default appReducer;","map":{"version":3,"sources":["E:/Incubator/socialnetwork_ts/src/redux/app-reducer.ts"],"names":["getAuthUserData","initialState","initialized","appReducer","state","action","type","initializedSuccess","initializeApp","dispatch","promise","Promise","all","then"],"mappings":"AAAA,SAAQA,eAAR,QAA8B,gBAA9B;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAE;AADE,CAAnB;;AAMA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAA+D;AAC9E,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,4BAAL;AACI,aAAO,EACH,GAAGF,KADA;AAEHF,QAAAA,WAAW,EAAE;AAFV,OAAP;;AAIJ;AACI,aAAOE,KAAP;AAPR;AASH,CAVD;;AAcA;AACA,OAAO,MAAMG,kBAAkB,GAAG,OAAO;AAACD,EAAAA,IAAI,EAAE;AAAP,CAAP,CAA3B,C,CAGP;;AACA,OAAO,MAAME,aAAa,GAAG,MAAOC,QAAD,IAAmB;AAClD,QAAMC,OAAO,GAAGD,QAAQ,CAACT,eAAe,EAAhB,CAAxB;AAEAW,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,OAAD,CAAZ,EACKG,IADL,CACU,MAAM;AACRJ,IAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACH,GAHL;AAIH,CAPM;AAUP,eAAeJ,UAAf","sourcesContent":["import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nlet initialState = {\r\n    initialized: false\r\n}\r\n\r\nexport type authPageType = typeof initialState\r\n\r\nconst appReducer = (state = initialState, action: AppActionType): authPageType => {\r\n    switch (action.type) {\r\n        case \"SN/APP/INITIALIZED_SUCCESS\":\r\n            return {\r\n                ...state,\r\n                initialized: true,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport type AppActionType = ReturnType<typeof initializedSuccess>\r\n\r\n// Action Creators (AC)\r\nexport const initializedSuccess = () => ({type: 'SN/APP/INITIALIZED_SUCCESS',}) as const\r\n\r\n\r\n//Thunks\r\nexport const initializeApp = () => (dispatch: any) => {\r\n    const promise = dispatch(getAuthUserData());\r\n\r\n    Promise.all([promise])\r\n        .then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n}\r\n\r\n\r\nexport default appReducer;"]},"metadata":{},"sourceType":"module"}