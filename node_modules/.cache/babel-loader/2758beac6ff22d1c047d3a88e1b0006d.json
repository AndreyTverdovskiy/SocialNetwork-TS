{"ast":null,"code":"import MyPosts from \"./MyPosts\";\nimport { addPost } from \"../../../redux/profile-reducer\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToProps = reduxStore => {\n  return {\n    posts: reduxStore.profilePage.posts,\n    profile: reduxStore.profilePage.profile,\n    status: reduxStore.profilePage.status\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    addPost: message => {\n      dispatch(addPost(message));\n    }\n  };\n};\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\nexport default MyPostsContainer;","map":{"version":3,"sources":["E:/Incubator/socialnetwork_ts/src/components/Profile/MyPosts/MyPostsContainer.tsx"],"names":["MyPosts","addPost","connect","mapStateToProps","reduxStore","posts","profilePage","profile","status","mapDispatchToProps","dispatch","message","MyPostsContainer"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAuC,gCAAvC;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAQA,IAAIC,eAAe,GAAIC,UAAD,IAA+C;AACjE,SAAO;AACHC,IAAAA,KAAK,EAAED,UAAU,CAACE,WAAX,CAAuBD,KAD3B;AAEHE,IAAAA,OAAO,EAAEH,UAAU,CAACE,WAAX,CAAuBC,OAF7B;AAGHC,IAAAA,MAAM,EAAEJ,UAAU,CAACE,WAAX,CAAuBE;AAH5B,GAAP;AAKH,CAND;;AAQA,IAAIC,kBAAkB,GAAIC,QAAD,IAA8C;AACnE,SAAO;AACHT,IAAAA,OAAO,EAAGU,OAAD,IAAqB;AAC1BD,MAAAA,QAAQ,CAACT,OAAO,CAACU,OAAD,CAAR,CAAR;AACH;AAHE,GAAP;AAMH,CAPD;;AAQA,MAAMC,gBAAgB,GAAGV,OAAO,CAACC,eAAD,EAAkBM,kBAAlB,CAAP,CAA6CT,OAA7C,CAAzB;AAEA,eAAeY,gBAAf","sourcesContent":["import MyPosts from \"./MyPosts\";\r\nimport {addPost, profilePageType} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../../redux/redux-store\";\r\nimport {Dispatch} from \"redux\";\r\n\r\ntype mapDispatchPropsType = {\r\n    addPost: (message: string) => void\r\n}\r\n\r\nlet mapStateToProps = (reduxStore: AppStateType): profilePageType => {\r\n    return {\r\n        posts: reduxStore.profilePage.posts,\r\n        profile: reduxStore.profilePage.profile,\r\n        status: reduxStore.profilePage.status\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch: Dispatch): mapDispatchPropsType => {\r\n    return {\r\n        addPost: (message: string) => {\r\n            dispatch(addPost(message))\r\n        }\r\n    }\r\n\r\n}\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;"]},"metadata":{},"sourceType":"module"}