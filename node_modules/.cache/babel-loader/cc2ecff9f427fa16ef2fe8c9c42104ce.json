{"ast":null,"code":"var _jsxFileName = \"E:\\\\Incubator\\\\socialnetwork_ts\\\\src\\\\components\\\\Login\\\\Login.tsx\";\nimport React from \"react\";\nimport { reduxForm } from \"redux-form\";\nimport { connect } from \"react-redux\";\nimport { loginTC } from \"../../redux/auth-reducer\";\nimport { Redirect } from \"react-router-dom\";\nimport { createField, Input } from \"../common/FormsControls/FormsControls\";\nimport { required } from \"../../utils/validators/validators\";\nimport s from '../common/FormsControls/FormsControls.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = ({\n  handleSubmit,\n  error\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [createField('Email', 'email', [required], Input), createField('Password', 'password', [required], Input, {\n      type: 'password'\n    }), createField(null, 'RememberMe', [], Input, {\n      type: 'checkbox'\n    }, 'Remember me'), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.formSummaryError,\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_c = LoginForm;\nconst LoginReduxForm = reduxForm({\n  form: 'login'\n})(LoginForm);\n\nconst Login = props => {\n  const onSubmit = formData => {\n    console.log(formData);\n    props.loginTC(formData.email, formData.password, formData.rememberMe);\n  };\n\n  if (props.isAuth) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: '/profile'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LoginReduxForm, {\n      onSubmit: onSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 12\n  }, this);\n};\n\n_c2 = Login;\n\nconst mapStateToProps = state => ({\n  isAuth: state.auth.isAuth\n});\n\nexport default connect(mapStateToProps, {\n  loginTC\n})(Login);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"LoginForm\");\n$RefreshReg$(_c2, \"Login\");","map":{"version":3,"sources":["E:/Incubator/socialnetwork_ts/src/components/Login/Login.tsx"],"names":["React","reduxForm","connect","loginTC","Redirect","createField","Input","required","s","LoginForm","handleSubmit","error","type","formSummaryError","LoginReduxForm","form","Login","props","onSubmit","formData","console","log","email","password","rememberMe","isAuth","mapStateToProps","state","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAA2BC,SAA3B,QAA2C,YAA3C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,OAAR,QAAsB,0BAAtB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AAEA,SAAQC,WAAR,EAAqBC,KAArB,QAAiC,uCAAjC;AACA,SAAQC,QAAR,QAAuB,mCAAvB;AACA,OAAOC,CAAP,MAAc,kDAAd;;;AAcA,MAAMC,SAAoD,GAAG,CAAC;AAACC,EAAAA,YAAD;AAAeC,EAAAA;AAAf,CAAD,KAA2B;AACpF,sBACI;AAAM,IAAA,QAAQ,EAAED,YAAhB;AAAA,eACKL,WAAW,CAAC,OAAD,EAAU,OAAV,EAAmB,CAACE,QAAD,CAAnB,EAA+BD,KAA/B,CADhB,EAEKD,WAAW,CAAC,UAAD,EAAa,UAAb,EAAyB,CAACE,QAAD,CAAzB,EAAqCD,KAArC,EAA4C;AAACM,MAAAA,IAAI,EAAE;AAAP,KAA5C,CAFhB,EAGKP,WAAW,CAAC,IAAD,EAAO,YAAP,EAAqB,EAArB,EAAyBC,KAAzB,EAAgC;AAACM,MAAAA,IAAI,EAAE;AAAP,KAAhC,EAAoD,aAApD,CAHhB,EAKKD,KAAK,iBACF;AAAK,MAAA,SAAS,EAAEH,CAAC,CAACK,gBAAlB;AAAA,gBACKF;AADL;AAAA;AAAA;AAAA;AAAA,YANR,eAUI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgBH,CAjBD;;KAAMF,S;AAmBN,MAAMK,cAAc,GAAGb,SAAS,CAAe;AAACc,EAAAA,IAAI,EAAE;AAAP,CAAf,CAAT,CAAyCN,SAAzC,CAAvB;;AAEA,MAAMO,KAAK,GAAIC,KAAD,IAA2B;AAErC,QAAMC,QAAQ,GAAIC,QAAD,IAA4B;AACzCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAF,IAAAA,KAAK,CAACd,OAAN,CAAcgB,QAAQ,CAACG,KAAvB,EAA8BH,QAAQ,CAACI,QAAvC,EAAiDJ,QAAQ,CAACK,UAA1D;AACH,GAHD;;AAIA,MAAIP,KAAK,CAACQ,MAAV,EAAkB;AACd,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AAED,sBAAO;AAAA,4BACH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,eAEH,QAAC,cAAD;AAAgB,MAAA,QAAQ,EAAEP;AAA1B;AAAA;AAAA;AAAA;AAAA,YAFG;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAIH,CAdD;;MAAMF,K;;AAeN,MAAMU,eAAe,GAAIC,KAAD,KAA0B;AAC9CF,EAAAA,MAAM,EAAEE,KAAK,CAACC,IAAN,CAAWH;AAD2B,CAA1B,CAAxB;;AAIA,eAAevB,OAAO,CAACwB,eAAD,EAAkB;AAACvB,EAAAA;AAAD,CAAlB,CAAP,CAAoCa,KAApC,CAAf","sourcesContent":["import React from \"react\";\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {connect} from \"react-redux\";\r\nimport {loginTC} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport s from '../common/FormsControls/FormsControls.module.css'\r\n\r\n\r\ntype FormDataType = {\r\n    email: string\r\n    password: string\r\n    rememberMe: boolean\r\n}\r\n\r\ntype loginPropsType = {\r\n    isAuth: boolean,\r\n    loginTC: (email: string, password: string, rememberMe: boolean) => void\r\n}\r\n\r\nconst LoginForm: React.FC<InjectedFormProps<FormDataType>> = ({handleSubmit, error}) => {\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField('Email', 'email', [required], Input)}\r\n            {createField('Password', 'password', [required], Input, {type: 'password'})}\r\n            {createField(null, 'RememberMe', [], Input, {type: 'checkbox'}, 'Remember me')}\r\n\r\n            {error &&\r\n                <div className={s.formSummaryError}>\r\n                    {error}\r\n                </div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm<FormDataType>({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props: loginPropsType) => {\r\n\r\n    const onSubmit = (formData: FormDataType) => {\r\n        console.log(formData)\r\n        props.loginTC(formData.email, formData.password, formData.rememberMe)\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={'/profile'}/>\r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {loginTC})(Login)\r\n\r\n"]},"metadata":{},"sourceType":"module"}