{"ast":null,"code":"import { v1 } from 'uuid';\nlet initialState = {\n  dialogs: [{\n    id: v1(),\n    name: 'Dimych'\n  }, {\n    id: v1(),\n    name: 'Andrey'\n  }, {\n    id: v1(),\n    name: 'Sveta'\n  }, {\n    id: v1(),\n    name: 'Sasha'\n  }, {\n    id: v1(),\n    name: 'Victor'\n  }, {\n    id: v1(),\n    name: 'Valera'\n  }],\n  messages: [{\n    id: v1(),\n    message: 'Hi'\n  }, {\n    id: v1(),\n    message: 'How is your it-kamasutra?'\n  }, {\n    id: v1(),\n    message: 'Yo'\n  }, {\n    id: v1(),\n    message: 'Yo'\n  }, {\n    id: v1(),\n    message: 'Yo'\n  }]\n};\nexport let sendMessageActionCreator = newMassage => {\n  return {\n    type: 'SEND-MESSAGE',\n    newMassage\n  };\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'SEND-MESSAGE':\n      {\n        const newMassage = {\n          id: v1(),\n          message: action.newMassage\n        };\n        return { ...state,\n          messages: [...state.messages, newMassage]\n        }; // stateCopy.messages = [...state.messages]\n        // stateCopy.messages.push(newMassage)\n        // stateCopy.newMassageText = ''\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default dialogsReducer;","map":{"version":3,"sources":["E:/Incubator/socialnetwork_ts/src/redux/dialogs-reducer.ts"],"names":["v1","initialState","dialogs","id","name","messages","message","sendMessageActionCreator","newMassage","type","dialogsReducer","state","action"],"mappings":"AAAA,SAAQA,EAAR,QAAiB,MAAjB;AAGA,IAAIC,YAAY,GAAG;AACfC,EAAAA,OAAO,EAAE,CACL;AAACC,IAAAA,EAAE,EAAEH,EAAE,EAAP;AAAWI,IAAAA,IAAI,EAAE;AAAjB,GADK,EAEL;AAACD,IAAAA,EAAE,EAAEH,EAAE,EAAP;AAAWI,IAAAA,IAAI,EAAE;AAAjB,GAFK,EAGL;AAACD,IAAAA,EAAE,EAAEH,EAAE,EAAP;AAAWI,IAAAA,IAAI,EAAE;AAAjB,GAHK,EAIL;AAACD,IAAAA,EAAE,EAAEH,EAAE,EAAP;AAAWI,IAAAA,IAAI,EAAE;AAAjB,GAJK,EAKL;AAACD,IAAAA,EAAE,EAAEH,EAAE,EAAP;AAAWI,IAAAA,IAAI,EAAE;AAAjB,GALK,EAML;AAACD,IAAAA,EAAE,EAAEH,EAAE,EAAP;AAAWI,IAAAA,IAAI,EAAE;AAAjB,GANK,CADM;AASfC,EAAAA,QAAQ,EAAE,CACN;AAACF,IAAAA,EAAE,EAAEH,EAAE,EAAP;AAAWM,IAAAA,OAAO,EAAE;AAApB,GADM,EAEN;AAACH,IAAAA,EAAE,EAAEH,EAAE,EAAP;AAAWM,IAAAA,OAAO,EAAE;AAApB,GAFM,EAGN;AAACH,IAAAA,EAAE,EAAEH,EAAE,EAAP;AAAWM,IAAAA,OAAO,EAAE;AAApB,GAHM,EAIN;AAACH,IAAAA,EAAE,EAAEH,EAAE,EAAP;AAAWM,IAAAA,OAAO,EAAE;AAApB,GAJM,EAKN;AAACH,IAAAA,EAAE,EAAEH,EAAE,EAAP;AAAWM,IAAAA,OAAO,EAAE;AAApB,GALM;AATK,CAAnB;AAkBA,OAAO,IAAIC,wBAAwB,GAAIC,UAAD,IAAwB;AAC1D,SAAO;AACHC,IAAAA,IAAI,EAAE,cADH;AAEHD,IAAAA;AAFG,GAAP;AAIH,CALM;;AAsBP,MAAME,cAAc,GAAG,CAACC,KAAsB,GAAGV,YAA1B,EAAwCW,MAAxC,KAAuF;AAE1G,UAAQA,MAAM,CAACH,IAAf;AACI,SAAK,cAAL;AAAqB;AACjB,cAAMD,UAA2B,GAAG;AAChCL,UAAAA,EAAE,EAAEH,EAAE,EAD0B;AAEhCM,UAAAA,OAAO,EAAEM,MAAM,CAACJ;AAFgB,SAApC;AAKA,eAAO,EACH,GAAGG,KADA;AAEHN,UAAAA,QAAQ,EAAE,CAAC,GAAGM,KAAK,CAACN,QAAV,EAAoBG,UAApB;AAFP,SAAP,CANiB,CAUjB;AACA;AACA;AACH;;AACD;AACI,aAAOG,KAAP;AAhBR;AAkBH,CApBD;;AAsBA,eAAeD,cAAf","sourcesContent":["import {v1} from 'uuid';\r\n\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: v1(), name: 'Dimych'},\r\n        {id: v1(), name: 'Andrey'},\r\n        {id: v1(), name: 'Sveta'},\r\n        {id: v1(), name: 'Sasha'},\r\n        {id: v1(), name: 'Victor'},\r\n        {id: v1(), name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: v1(), message: 'Hi'},\r\n        {id: v1(), message: 'How is your it-kamasutra?'},\r\n        {id: v1(), message: 'Yo'},\r\n        {id: v1(), message: 'Yo'},\r\n        {id: v1(), message: 'Yo'}\r\n    ]\r\n}\r\n\r\nexport let sendMessageActionCreator = (newMassage: string) => {\r\n    return {\r\n        type: 'SEND-MESSAGE',\r\n        newMassage\r\n    } as const\r\n}\r\n\r\nexport type DialogsActionType = ReturnType<typeof sendMessageActionCreator>\r\n\r\nexport type messageDataType = {\r\n    id: string\r\n    message: string\r\n}\r\nexport type dialogsDataType = {\r\n    id: string\r\n    name: string\r\n}\r\nexport type dialogsPageType = {\r\n    dialogs: Array<dialogsDataType>,\r\n    messages: Array<messageDataType>,\r\n}\r\n\r\nconst dialogsReducer = (state: dialogsPageType = initialState, action: DialogsActionType): dialogsPageType => {\r\n\r\n    switch (action.type) {\r\n        case 'SEND-MESSAGE': {\r\n            const newMassage: messageDataType = {\r\n                id: v1(),\r\n                message: action.newMassage\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMassage]\r\n            }\r\n            // stateCopy.messages = [...state.messages]\r\n            // stateCopy.messages.push(newMassage)\r\n            // stateCopy.newMassageText = ''\r\n        }\r\n        default :\r\n            return state\r\n    }\r\n}\r\n\r\nexport default dialogsReducer;"]},"metadata":{},"sourceType":"module"}