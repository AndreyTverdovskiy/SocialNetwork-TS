{"ast":null,"code":"var _jsxFileName = \"E:\\\\Incubator\\\\socialnetwork_ts\\\\src\\\\components\\\\Dialogs\\\\Dialogs.tsx\";\nimport React from 'react';\nimport s from './Dialogs.module.css';\nimport DialogItem from './DialogItem/DialogItem';\nimport Message from './Message/Message';\nimport { Field, reduxForm } from \"redux-form\";\nimport { maxLengthCreator, required } from \"../../utils/validators/validators\";\nimport { TextArea } from \"../common/FormsControls/FormsControls\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Dialogs(props) {\n  let dialogsElements = props.dialogPage.dialogs.map(d => /*#__PURE__*/_jsxDEV(DialogItem, {\n    name: d.name,\n    id: d.id\n  }, d.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this));\n  let messagesElements = props.dialogPage.messages.map(m => /*#__PURE__*/_jsxDEV(Message, {\n    message: m.message\n  }, m.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this)); // let newSendMassage = React.createRef<HTMLTextAreaElement>()\n\n  const maxLength50 = maxLengthCreator(50);\n\n  const AddMessageForm = props => {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: props.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Field, {\n          name: 'newMassageBody',\n          component: TextArea,\n          placeholder: 'Enter your massage',\n          validate: [required, maxLength50]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this);\n  };\n\n  const AddMessageFormReduxForm = reduxForm({\n    form: 'dialogAddForm'\n  })(AddMessageForm);\n\n  const onSubmit = formData => {\n    props.sendMessage(formData.newMassageBody);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.dialogs,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.dialogsItems,\n      children: dialogsElements\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.messages,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: messagesElements\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(AddMessageFormReduxForm, {\n        onSubmit: onSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Dialogs;\nexport default Dialogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dialogs\");","map":{"version":3,"sources":["E:/Incubator/socialnetwork_ts/src/components/Dialogs/Dialogs.tsx"],"names":["React","s","DialogItem","Message","Field","reduxForm","maxLengthCreator","required","TextArea","Dialogs","props","dialogsElements","dialogPage","dialogs","map","d","name","id","messagesElements","messages","m","message","maxLength50","AddMessageForm","handleSubmit","AddMessageFormReduxForm","form","onSubmit","formData","sendMessage","newMassageBody","dialogsItems"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,sBAAd;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AAEA,SAAQC,KAAR,EAAkCC,SAAlC,QAAkD,YAAlD;AACA,SAAQC,gBAAR,EAA0BC,QAA1B,QAAyC,mCAAzC;AACA,SAAQC,QAAR,QAAuB,uCAAvB;;;AAaA,SAASC,OAAT,CAAiBC,KAAjB,EAAyC;AAErC,MAAIC,eAAe,GAAGD,KAAK,CAACE,UAAN,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA6BC,CAAC,iBAChD,QAAC,UAAD;AACY,IAAA,IAAI,EAAEA,CAAC,CAACC,IADpB;AAEY,IAAA,EAAE,EAAED,CAAC,CAACE;AAFlB,KAAiBF,CAAC,CAACE,EAAnB;AAAA;AAAA;AAAA;AAAA,UADkB,CAAtB;AAOA,MAAIC,gBAAgB,GAAGR,KAAK,CAACE,UAAN,CAAiBO,QAAjB,CAA0BL,GAA1B,CAA8BM,CAAC,iBAClD,QAAC,OAAD;AACS,IAAA,OAAO,EAAEA,CAAC,CAACC;AADpB,KAAcD,CAAC,CAACH,EAAhB;AAAA;AAAA;AAAA;AAAA,UADmB,CAAvB,CATqC,CAerC;;AAEA,QAAMK,WAAW,GAAGhB,gBAAgB,CAAC,EAAD,CAApC;;AACA,QAAMiB,cAA+D,GAAIb,KAAD,IAAW;AAC/E,wBACI;AAAM,MAAA,QAAQ,EAAEA,KAAK,CAACc,YAAtB;AAAA,8BACI;AAAA,+BACI,QAAC,KAAD;AAAO,UAAA,IAAI,EAAE,gBAAb;AACO,UAAA,SAAS,EAAEhB,QADlB;AAEO,UAAA,WAAW,EAAE,oBAFpB;AAGO,UAAA,QAAQ,EAAE,CAACD,QAAD,EAAWe,WAAX;AAHjB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAQI;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAcH,GAfD;;AAiBA,QAAMG,uBAAuB,GAAGpB,SAAS,CAAqB;AAACqB,IAAAA,IAAI,EAAE;AAAP,GAArB,CAAT,CAAuDH,cAAvD,CAAhC;;AAEA,QAAMI,QAAQ,GAAIC,QAAD,IAAkC;AAC/ClB,IAAAA,KAAK,CAACmB,WAAN,CAAkBD,QAAQ,CAACE,cAA3B;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAE7B,CAAC,CAACY,OAAlB;AAAA,4BACI;AAAK,MAAA,SAAS,EAAEZ,CAAC,CAAC8B,YAAlB;AAAA,gBACKpB;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAK,MAAA,SAAS,EAAEV,CAAC,CAACkB,QAAlB;AAAA,8BACI;AAAA,kBAAMD;AAAN;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI,QAAC,uBAAD;AAAyB,QAAA,QAAQ,EAAES;AAAnC;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;KArDQlB,O;AAwDT,eAAeA,OAAf","sourcesContent":["import React from 'react';\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport {dialogsPageType} from \"../../redux/dialogs-reducer\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {TextArea} from \"../common/FormsControls/FormsControls\";\r\n\r\ntype propsDialogType = {\r\n    dialogPage: dialogsPageType\r\n    newMassageText: string\r\n    sendMessage: (newMassage: string) => void\r\n    updateNewMessageAction: (text: string) => void\r\n\r\n}\r\ntype AddMessageFormType = {\r\n    newMassageBody: string\r\n}\r\n\r\nfunction Dialogs(props: propsDialogType) {\r\n\r\n    let dialogsElements = props.dialogPage.dialogs.map(d =>\r\n        <DialogItem key={d.id}\r\n                    name={d.name}\r\n                    id={d.id}\r\n        />\r\n    )\r\n\r\n    let messagesElements = props.dialogPage.messages.map(m =>\r\n        <Message key={m.id}\r\n                 message={m.message}\r\n        />\r\n    )\r\n\r\n    // let newSendMassage = React.createRef<HTMLTextAreaElement>()\r\n\r\n    const maxLength50 = maxLengthCreator(50)\r\n    const AddMessageForm: React.FC<InjectedFormProps<AddMessageFormType>> = (props) => {\r\n        return (\r\n            <form onSubmit={props.handleSubmit}>\r\n                <div>\r\n                    <Field name={'newMassageBody'}\r\n                           component={TextArea}\r\n                           placeholder={'Enter your massage'}\r\n                           validate={[required, maxLength50]}\r\n                    />\r\n                </div>\r\n                <div>\r\n                    <button>Send</button>\r\n                </div>\r\n            </form>\r\n        )\r\n    }\r\n\r\n    const AddMessageFormReduxForm = reduxForm<AddMessageFormType>({form: 'dialogAddForm'})(AddMessageForm)\r\n\r\n    const onSubmit = (formData: AddMessageFormType) => {\r\n        props.sendMessage(formData.newMassageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageFormReduxForm onSubmit={onSubmit}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Dialogs;"]},"metadata":{},"sourceType":"module"}