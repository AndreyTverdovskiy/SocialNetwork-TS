{"ast":null,"code":"var _jsxFileName = \"E:\\\\Incubator\\\\socialnetwork_ts\\\\src\\\\components\\\\Profile\\\\ProfileContainer.tsx\";\nimport React from 'react';\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { getStatusTC, getUserProfileThunkCreator, updateStatus } from \"../../redux/profile-reducer\";\nimport { withRouter } from \"react-router-dom\";\nimport { compose } from \"redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ProfileClassContainer extends React.Component {\n  componentDidMount() {\n    let userId = this.props.match.params.userId;\n\n    if (!userId) {\n      userId = this.props.myId;\n\n      if (!userId) {\n        this.props.history.push('/login');\n      }\n    }\n\n    this.props.getUserProfileThunkCreator(userId);\n    this.props.getStatusTC(userId);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Profile, {\n      profile: this.props.profile,\n      status: this.props.status,\n      updateStatus: this.props.updateStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nlet mapStateToProps = reduxStore => ({\n  profile: reduxStore.profilePage.profile,\n  status: reduxStore.profilePage.status,\n  myId: reduxStore.auth.userId,\n  isAuth: reduxStore.auth.isAuth\n});\n\nexport default compose(connect(mapStateToProps, {\n  getUserProfileThunkCreator,\n  getStatusTC,\n  updateStatus\n}), withRouter //withAuthRedirect\n)(ProfileClassContainer);","map":{"version":3,"sources":["E:/Incubator/socialnetwork_ts/src/components/Profile/ProfileContainer.tsx"],"names":["React","Profile","connect","getStatusTC","getUserProfileThunkCreator","updateStatus","withRouter","compose","ProfileClassContainer","Component","componentDidMount","userId","props","match","params","myId","history","push","render","profile","status","mapStateToProps","reduxStore","profilePage","auth","isAuth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAEA,SAAQC,WAAR,EAAkCC,0BAAlC,EAA8DC,YAA9D,QAAiF,6BAAjF;AACA,SAA6BC,UAA7B,QAA8C,kBAA9C;AACA,SAAQC,OAAR,QAAsB,OAAtB;;;AAyBA,MAAMC,qBAAN,SAAoCR,KAAK,CAACS,SAA1C,CAAsE;AAElEC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,MAAM,GAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,MAArC;;AACA,QAAI,CAACA,MAAL,EAAa;AACTA,MAAAA,MAAM,GAAG,KAAKC,KAAL,CAAWG,IAApB;;AACA,UAAI,CAACJ,MAAL,EAAY;AACR,aAAKC,KAAL,CAAWI,OAAX,CAAmBC,IAAnB,CAAwB,QAAxB;AACH;AACJ;;AACD,SAAKL,KAAL,CAAWR,0BAAX,CAAsCO,MAAtC;AACA,SAAKC,KAAL,CAAWT,WAAX,CAAuBQ,MAAvB;AACH;;AAEDO,EAAAA,MAAM,GAAG;AACL,wBACI,QAAC,OAAD;AAAS,MAAA,OAAO,EAAE,KAAKN,KAAL,CAAWO,OAA7B;AACS,MAAA,MAAM,EAAE,KAAKP,KAAL,CAAWQ,MAD5B;AAES,MAAA,YAAY,EAAE,KAAKR,KAAL,CAAWP;AAFlC;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AArBiE;;AAyBtE,IAAIgB,eAAe,GAAIC,UAAD,KAClB;AACIH,EAAAA,OAAO,EAAEG,UAAU,CAACC,WAAX,CAAuBJ,OADpC;AAEIC,EAAAA,MAAM,EAAEE,UAAU,CAACC,WAAX,CAAuBH,MAFnC;AAGIL,EAAAA,IAAI,EAAEO,UAAU,CAACE,IAAX,CAAgBb,MAH1B;AAIIc,EAAAA,MAAM,EAAEH,UAAU,CAACE,IAAX,CAAgBC;AAJ5B,CADkB,CAAtB;;AAWA,eAAelB,OAAO,CAClBL,OAAO,CAACmB,eAAD,EAAkB;AAACjB,EAAAA,0BAAD;AAA6BD,EAAAA,WAA7B;AAA0CE,EAAAA;AAA1C,CAAlB,CADW,EAElBC,UAFkB,CAGlB;AAHkB,CAAP,CAIbE,qBAJa,CAAf","sourcesContent":["import React from 'react';\r\n\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\nimport {getStatusTC, profileType, getUserProfileThunkCreator, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {RouteComponentProps, withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n\r\ntype MapStatePropsType = {\r\n    profile: profileType\r\n    status: string\r\n    myId: string\r\n    isAuth:boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n    setUserProfile: (profile: profileType) => void\r\n    getUserProfileThunkCreator: (userId: string) => void\r\n    getStatusTC: (userId: string) => void\r\n    updateStatus: (status:string) => void\r\n\r\n}\r\ntype OwnPropsProfileType = MapStatePropsType & MapDispatchPropsType\r\n\r\ntype PathParamsType = {\r\n    userId: string\r\n}\r\n\r\ntype PropsProfileType = RouteComponentProps<PathParamsType> & OwnPropsProfileType\r\n\r\nclass ProfileClassContainer extends React.Component<PropsProfileType> {\r\n\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n            userId = this.props.myId\r\n            if (!userId){\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfileThunkCreator(userId)\r\n        this.props.getStatusTC(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatus={this.props.updateStatus}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (reduxStore: AppStateType): MapStatePropsType => (\r\n    {\r\n        profile: reduxStore.profilePage.profile,\r\n        status: reduxStore.profilePage.status,\r\n        myId: reduxStore.auth.userId,\r\n        isAuth: reduxStore.auth.isAuth\r\n\r\n    }\r\n)\r\n\r\n\r\nexport default compose<React.ComponentType>(\r\n    connect(mapStateToProps, {getUserProfileThunkCreator, getStatusTC, updateStatus}),\r\n    withRouter,\r\n    //withAuthRedirect\r\n)(ProfileClassContainer)"]},"metadata":{},"sourceType":"module"}